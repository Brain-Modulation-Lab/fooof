.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_tutorials_plot_02-FOOOF.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_plot_02-FOOOF.py:


02: Fitting FOOOF Models
========================

Basic usage of the FOOOF object.



.. code-block:: python


    # Import numpy to load example data
    import numpy as np

    # Import the FOOOF object
    from fooof import FOOOF








.. code-block:: python


    # Load example data to use for this tutorial (a single example power spectrum)
    freqs = np.load('dat/freqs.npy')
    spectrum = np.load('dat/spectrum.npy')







FOOOF Object
------------

Fooof is an object oriented module.

At the core of the module is the FOOOF object, which holds relevant data and settings
as attributes, and procedures to run the FOOOF algorithm as methods.

The organization is similar to sklearn:

- A model object is initialized, with relevant settings
- The model is used to fit the data
- Results can be extracted from the object



FOOOF Example
-------------

The following example demonstrates fitting a FOOOF model on a single power spectrum.




.. code-block:: python


    # Initialize FOOOF model
    fm = FOOOF()

    # Set the frequency range upon which to fit FOOOF
    freq_range = [2, 40]

    # Run FOOOF model - calculates model, plots, and prints results
    fm.report(freqs, spectrum, freq_range)




.. image:: /auto_tutorials/images/sphx_glr_plot_02-FOOOF_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    FOOOF WARNING: Lower-bound peak width limit is < or ~= the frequency resolution: 0.49 <= 0.50
            Lower bounds below frequency-resolution have no effect (effective lower bound is freq-res)
            Too low a limit may lead to overfitting noise as small bandwidth peaks.
            We recommend a lower bound of approximately 2x the frequency resolution.

    ==================================================================================================
                                                                                                  
                                       FOOOF - POWER SPECTRUM MODEL                                   
                                                                                                  
                            The model was run on the frequency range 2 - 40 Hz                        
                                     Frequency Resolution is 0.49 Hz                                  
                                                                                                  
                                Aperiodic Parameters (offset, exponent):                              
                                             -21.8968, 0.7635                                         
                                                                                                  
                                           4 peaks were found:                                        
                                    CF:   9.75, Amp:  1.111, BW:  2.28                                
                                    CF:  13.46, Amp:  0.248, BW:  1.68                                
                                    CF:  15.81, Amp:  0.250, BW:  1.56                                
                                    CF:  19.49, Amp:  0.521, BW:  3.77                                
                                                                                                  
                                         Goodness of fit metrics:                                     
                                        R^2 of model fit is 0.9782                                    
                                    Root mean squared error is 0.0480                                 
                                                                                                  
    ==================================================================================================


FOOOF Report
~~~~~~~~~~~~

The above method 'report', is a convenience method that calls a series of FOOOF methods:

- :func:`fit`:  fits the FOOOF model
- :func:`print_results`: prints out the results, in string form
- :func:`plot`: plots to data and model fit

Each of these methods can each be called individually.




.. code-block:: python


    # Alternatively, just fit the model with FOOOF.fit() (without printing anything)
    fm.fit(freqs, spectrum, freq_range)

    # After fitting, plotting and parameter fitting can be called independently:
    # fm.print_results()
    # fm.plot()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    FOOOF WARNING: Lower-bound peak width limit is < or ~= the frequency resolution: 0.49 <= 0.50
            Lower bounds below frequency-resolution have no effect (effective lower bound is freq-res)
            Too low a limit may lead to overfitting noise as small bandwidth peaks.
            We recommend a lower bound of approximately 2x the frequency resolution.


FOOOF Results
~~~~~~~~~~~~~

When the FOOOF model is calculated, the model fit parameters are stored as object
attributes that can be accessed after fitting.

Following the sklearn convention, attributes that are fit as a result of
the model have a trailing underscore:

- aperiodic\_params_
- peak\_params_
- error\_
- r2\_



Access model fit parameters from FOOOF object, after fitting:




.. code-block:: python


    # Aperiodic parameters
    print('Aperiodic parameters: \n', fm.aperiodic_params_, '\n')

    # Peak parameters
    print('Peak parameters: \n', fm.peak_params_, '\n')

    # Goodness of fit measures
    print('Goodness of fit:')
    print(' Error - ', fm.error_)
    print(' R^2   - ', fm.r_squared_)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Aperiodic parameters: 
     [-21.89682934   0.76346866] 

    Peak parameters: 
     [[ 9.74716521  1.11125397  2.28154042]
     [13.46025659  0.24785595  1.68052361]
     [15.81191706  0.24964901  1.55741855]
     [19.48856681  0.52143304  3.7670429 ]] 

    Goodness of fit:
     Error -  0.04803535943935238
     R^2   -  0.9781710674564545


Notes on Interpreting Peak Parameters
-------------------------------------

Note that the peak parameters that are returned are not exactly the same as the
parameters of the Gaussians used internally to fit the peaks.

Specifically:

- CF is the mean parameter of the Gaussian (same as the Gaussian)
- Amp is the amplitude of the model fit above the aperiodic signal fit [1],
  which is not necessarily the same as the Gaussian amplitude
- BW is 2 * the standard deviation of the Gaussian [2]

[1] Since the Gaussians are fit together, if any Gaussians overlap,
than the actual height of the fit at a given point can only be assessed
when considering all Gaussians. To be better able to interpret amplitudes
for single peak fits, we re-define the peak amplitude as above.

[2] Standard deviation is '1 sided', where as the returned BW is '2 sided'.



The underlying gaussian parameters are also availabe from the FOOOF object,
in the '_gaussian_params' attribute.



Compare the 'peak\_params_', as compared to the underlying gaussian parameters



.. code-block:: python

    print('  Peak Parameters \t Gaussian Parameters')
    for peak, gau in zip(fm.peak_params_, fm._gaussian_params):
        print('{:5.2f} {:5.2f} {:5.2f} \t {:5.2f} {:5.2f} {:5.2f}'.format(*peak, *gau))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Peak Parameters          Gaussian Parameters
     9.75  1.11  2.28         9.75  1.11  1.14
    13.46  0.25  1.68        13.46  0.24  0.84
    15.81  0.25  1.56        15.81  0.18  0.78
    19.49  0.52  3.77        19.49  0.52  1.88


FOOOFResults object
~~~~~~~~~~~~~~~~~~~

FOOOF also has a convenience method to return all model fit results: :func:`get_results`.

It returns all the model fit parameters, including the underlying Gaussian parameters.

The `get_results` methods collects and returns these results as a FOOOFResults object
(a named tuple), to keep data organized, and allow for easier collecting.




.. code-block:: python


    # Grab each model fit result with convenience method to gather all results
    ap_params, peak_params, r_squared, fit_error, gauss_params = fm.get_results()

    # Get results actually returns a FOOOFResult object (a named tuple)
    fres = fm.get_results()








.. code-block:: python


    # Print out the FOOOFResults
    print(fres, '\n')

    # From FOOOFResults, you can access the different results
    print('Aperiodic Signal Parameters: \n', fres.aperiodic_params)

    # Check the r^2 and error of the model fit
    print('R-squared: \n {:5.4f}'.format(fm.r_squared_))
    print('Fit error: \n {:5.4f}'.format(fm.error_))




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    FOOOFResult(aperiodic_params=array([-21.89682934,   0.76346866]), peak_params=array([[ 9.74716521,  1.11125397,  2.28154042],
           [13.46025659,  0.24785595,  1.68052361],
           [15.81191706,  0.24964901,  1.55741855],
           [19.48856681,  0.52143304,  3.7670429 ]]), r_squared=0.9781710674564545, error=0.04803535943935238, gaussian_params=array([[ 9.74716521,  1.11138316,  1.14077021],
           [13.46025659,  0.24387152,  0.84026181],
           [15.81191706,  0.1823705 ,  0.77870928],
           [19.48856681,  0.52156491,  1.88352145]])) 

    Aperiodic Signal Parameters: 
     [-21.89682934   0.76346866]
    R-squared: 
     0.9782
    Fit error: 
     0.0480


**Total running time of the script:** ( 0 minutes  0.114 seconds)


.. _sphx_glr_download_auto_tutorials_plot_02-FOOOF.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_02-FOOOF.py <plot_02-FOOOF.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_02-FOOOF.ipynb <plot_02-FOOOF.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
